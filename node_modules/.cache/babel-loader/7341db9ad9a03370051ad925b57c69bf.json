{"ast":null,"code":"var _jsxFileName = \"/Users/adrianaceron/Desktop/MIGRACODE/pokedex/src/BestPokemonFetcher.js\";\nimport React, { useState, useEffect, Component } from 'react';\n\nfunction BestPokemonFetcher(props) {\n  let [bestPokemon, setBestPokemon] = useState(null);\n  useEffect(() => {\n    fetch(`https://pokeapi.co/api/v2/pokemon/1/`).then(res => res.json()).then(data => setBestPokemon(data));\n  }, [props]);\n\n  if (!bestPokemon) {\n    return null;\n  } else {\n    const abilities = bestPokemon.abilities.map(item => {\n      return item.ability.name;\n    });\n    return /*#__PURE__*/React.createElement(BestPokemon, {\n      pokemon: bestPokemon,\n      abilities: props.abilities,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }\n    });\n  }\n}\n\nclass BestPokemon extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pokemonNames: [],\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    fetch(`https://pokeapi.co/api/v2/pokedex/1/`).then(res => res.json()).then(data => {\n      const names = [data.pokemon_entries[0].pokemon_species.name, data.pokemon_entries[3].pokemon_species.name, data.pokemon_entries[6].pokemon_species.name];\n      setTimeout(() => {\n        this.setState({\n          pokemonNames: names,\n          isLoading: false\n        });\n      }, 1000);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 41\n      }\n    }, \"Loading...\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, \"Names\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, this.state.pokemonNames.map((name, index) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 37\n        }\n      }, name);\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, \"Abilities\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, this.props.abilities.map((name, index) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 37\n        }\n      }, name);\n    }))));\n  }\n\n}\n\nexport default BestPokemonFetcher;","map":{"version":3,"sources":["/Users/adrianaceron/Desktop/MIGRACODE/pokedex/src/BestPokemonFetcher.js"],"names":["React","useState","useEffect","Component","BestPokemonFetcher","props","bestPokemon","setBestPokemon","fetch","then","res","json","data","abilities","map","item","ability","name","BestPokemon","state","pokemonNames","isLoading","componentDidMount","names","pokemon_entries","pokemon_species","setTimeout","setState","render","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\n\nfunction BestPokemonFetcher(props) {\n\n    let [bestPokemon, setBestPokemon] = useState(null);\n\n    useEffect(() => {\n        fetch(\n            `https://pokeapi.co/api/v2/pokemon/1/`\n        )\n            .then(res => res.json())\n            .then(data => setBestPokemon(data));\n    }, [props]);\n\n    if (!bestPokemon) {\n        return null\n    } else {\n        const abilities = bestPokemon.abilities.map(item => {\n            return item.ability.name\n        })\n\n        return <BestPokemon pokemon={bestPokemon} abilities={props.abilities} />\n    }\n}\n\nclass BestPokemon extends Component {\n    state = {\n        pokemonNames: [],\n        isLoading: true,\n    };\n\n    componentDidMount() {\n        fetch(`https://pokeapi.co/api/v2/pokedex/1/`)\n            .then(res => res.json())\n            .then(data => {\n                const names = [data.pokemon_entries[0].pokemon_species.name, data.pokemon_entries[3].pokemon_species.name, data.pokemon_entries[6].pokemon_species.name]\n                setTimeout(() => {\n                    this.setState({\n                        pokemonNames: names,\n                        isLoading: false\n                    })\n                }, 1000)\n\n            });\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.isLoading ? <span>Loading...</span> :\n                    <>\n                        <h2>Names</h2>\n                        <ul>\n                            {this.state.pokemonNames.map((name, index) => {\n                                return (\n                                    <li key={index}>{name}</li>\n                                )\n                            })}\n                        </ul>\n                        <h2>Abilities</h2>\n                        <ul>\n                            {this.props.abilities.map((name, index) => {\n                                return (\n                                    <li key={index}>{name}</li>\n                                )\n                            })}\n                        </ul>\n                    </>\n                }\n            </div>\n        )\n    }\n}\n\nexport default BestPokemonFetcher;"]},"metadata":{},"sourceType":"module"}